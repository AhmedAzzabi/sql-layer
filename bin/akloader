#!/usr/bin/env python

import sys
import os
import commands
import optparse

usage = """%prog [options]"""

parser = optparse.OptionParser(usage=usage)

parser.add_option(
    "--akserver",
    default = "localhost:5140",
    help = "Location where akiban server is running. [default: %default]"
  )

parser.add_option(
    "--mysql-host",
    default = "localhost",
    help = "Host where MySQL is running. [default: %default]"
  )

parser.add_option(
    "--mysql-user",
    default = "root",
    help = "User to connect to MySQL as. [default: %default]"
  )

parser.add_option(
    "--mysql-pass",
    default = "",
    help = "Password to connect to MySQL with. [default: %default]"
  )

parser.add_option(
    "--temp-schema",
    default = "bulkload",
    help = "Temporary schema in MySQL used by bulk-loader. [default: %default]"
  )

parser.add_option(
    "--source-schema",
    default = "",
    help = "Schema from which data will be pulled and loaded into Akiban."
  )

parser.add_option(
    "--target-schema",
    default = "",
    help = "Target schema for loading data into Akiban."
  )

parser.add_option(
    "--groups",
    default = "",
    help = "Akiban groups to load (comma-separated list of groups)."
  )

parser.add_option(
    "--ak-jar",
    default = "/usr/share/akiban/akiban-server.jar",
    help = "Path to akiban server JAR file. [default: %default]"
  )

parser.add_option(
    "--mysql-jar",
    default = "/usr/share/java/mysql.jar",
    help = "Path to MySQL JDBC JAR file. [default: %default]"
  )

(options, args) = parser.parse_args()

if not os.path.isfile(options.ak_jar):
    print "Akiban Server JAR at %s not present." % options.ak_jar
    sys.exit(1)

if not os.path.isfile(options.mysql_jar):
    print "MySQL JDBC JAR file at %s not present." % options.mysql_jar
    sys.exit(1)

if options.groups == "":
    print "At least one Akiban group needs to be specified."
    sys.exit(1)

if options.source_schema == "":
    print "A source schema needs to be specified."
    sys.exit(1)

if options.target_schema == "":
    print "A target schema needs to be specified."
    sys.exit(1)

# build a list of groups to load
groups = [group for group in options.groups.split(",")]

blk_cmd = "java -ea -cp %s:%s " % (options.ak_jar, options.mysql_jar)
blk_cmd += "com.akiban.server.util.BulkLoaderClient --akserver %s " % options.akserver
blk_cmd += "--mysql %s --user %s " % (options.mysql_host, options.mysql_user)
if options.mysql_pass != "":
    blk_cmd += "--password %s " % options.mysql_pass
blk_cmd += "--temp %s " % options.temp_schema
blk_cmd += "--source %s:%s " % (options.target_schema, options.source_schema)
for group in groups:
    blk_cmd += "--group %s " % group

# go ahead and execute the bulkloader
os.system(blk_cmd)
