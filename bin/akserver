#!/bin/bash
#
# Copyright (C) 2011 Akiban Technologies Inc.
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License, version 3,
# as published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see http://www.gnu.org/licenses.
#

#
# OPTIONS:
#   -f: start in foreground
#   -g: start the persistit GUI
#   -p <filename>: log the pid to a file (useful to kill it later)
#   -j <filename>: jar file of server to use
#   -k: kill an akiban server process
#   -v: print the version of akiban server
#
# CONTROLLING STARTUP:
# 
# This script relies on few environment variables to determine startup
# behavior, those variables are:
#
#   JVM_OPTS -- Additional arguments to the JVM for heap size, etc
#   AKIBAN_CONF -- Directory containing configuration files.
#

akiban_home=$(cd $(dirname $0)/..; pwd -P)

# Use JAVA_HOME if set, otherwise look for java in PATH
if [ -x $JAVA_HOME/bin/java ]; then
    JAVA=$JAVA_HOME/bin/java
else
    JAVA=`which java`
fi

get_version()
{
    jar_file=$1
    # the JAR file we use to grab the version
    if [ "x$jar_file" == "x" ]; then
        jar_file="${akiban_home}/target/akiban-server-0.4.1-SNAPSHOT-jar-with-dependencies.jar"
    fi

    server_version=$(exec $JAVA -cp $jar_file com.akiban.server.GetVersion)
    persistit_version=$(exec $JAVA -cp $jar_file com.persistit.GetVersion)
    echo "server   : ${server_version}"
    echo "persistit: ${persistit_version}"
}

launch_service()
{
    foreground=$1
    props=$2
    usegui=$3
    pidpath=$4
    JAR_FILE=$5
    AKIBAN_CONF=$6

    # the JAR file we use to launch the akiban server
    if [ "x$JAR_FILE" == "x" ]; then
        JAR_FILE="${akiban_home}/target/akiban-server-0.4.1-SNAPSHOT-jar-with-dependencies.jar"
    fi

    if [ "x$AKIBAN_CONF" == "x" ]; then
        # default AKIBAN_CONF dir
        AKIBAN_CONF="${akiban_home}/conf"
    fi
    akiban_parms="-Dakiban.admin=$AKIBAN_CONF"

    if [ "x$pidpath" != "x" ]; then
        akiban_parms="$akiban_parms -Dakserver.pidfile=$pidpath"
    fi

    if [ -f "$AKIBAN_CONF/config/jvm.options" ]; then
        . "$AKIBAN_CONF/config/jvm.options"
    fi

    if [ "x$usegui" != "x" ]; then
        akiban_parms="$akiban_parms -Dcom.persistit.showgui=true"
    fi

    if [ "x$foreground" != "x" ]; then
        echo $JAVA $JVM_OPTS $akiban_parms -jar $JAR_FILE $props
        exec $JAVA $JVM_OPTS $akiban_parms -jar $JAR_FILE $props
    else
        echo ${akiban_home}
        # use log4j to log output
        akiban_parms="$akiban_parms -Dlog4j.configuration=file:$AKIBAN_CONF/config/log4j.properties"
        echo "JVM_OPTS: $JVM_OPTS"
        echo "akiban_parms: $akiban_parms"
        echo "props: $props"
        exec $JAVA $JVM_OPTS $akiban_parms -jar $JAR_FILE $props <&- &
    fi

    return $?
}

# Parse any command line options.
args=`getopt fkvghj:c:p:D: "$@"`
eval set -- "$args"

while true; do
    case "$1" in
        -p)
            pidfile="$2"
            shift 2
        ;;
        -j)
            jarfile="$2"
            shift 2
        ;;
        -c)
            conf="$2"
            shift 2
        ;;
        -f)
            foreground="yes"
            shift
        ;;
        -g)
            gui="yes"
            shift
        ;;
        -h)
            echo "Usage: $0 [-f] [-g] [-h] [-p pidfile] [-j jarfile]"
            echo "-f launch the akiban server process in the foreground"
            echo "-g launch the persistit admin tool"
            echo "-p specify a pid file"
            echo "-j specify a jar file for the server to use"
            echo "-k kill an akiban server process"
            echo "-v print akiban server version"
            exit 0
        ;;
        -D)
            properties="$properties -D$2"
            shift 2
        ;;
        -k)
            # this is not ideal but is only intended to be
            # called by a developer in their environment when
            # they want to quickly kill an akiban-server
            # process. This can kill other process with akiban-server
            # in their name or arguments too...
            pgrep -u `whoami` -f akiban-server | xargs kill -9
            exit 0
        ;;
        -v)
            get_version $jarfile
            exit 0
        ;;
        --)
            shift
            break
        ;;
        *)
            echo "Error parsing arguments!" >&2
            exit 1
        ;;
    esac
done

# Start up the service
launch_service "$foreground" "$properties" "$gui" "$pidfile" "$jarfile" "$conf"

exit $?

# vi:ai sw=4 ts=4 tw=0 et
