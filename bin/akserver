#!/bin/bash
#
# END USER LICENSE AGREEMENT (“EULA”)
#
# READ THIS AGREEMENT CAREFULLY (date: 9/13/2011):
# http://www.akiban.com/licensing/20110913
#
# BY INSTALLING OR USING ALL OR ANY PORTION OF THE SOFTWARE, YOU ARE ACCEPTING
# ALL OF THE TERMS AND CONDITIONS OF THIS AGREEMENT. YOU AGREE THAT THIS
# AGREEMENT IS ENFORCEABLE LIKE ANY WRITTEN AGREEMENT SIGNED BY YOU.
#
# IF YOU HAVE PAID A LICENSE FEE FOR USE OF THE SOFTWARE AND DO NOT AGREE TO
# THESE TERMS, YOU MAY RETURN THE SOFTWARE FOR A FULL REFUND PROVIDED YOU (A) DO
# NOT USE THE SOFTWARE AND (B) RETURN THE SOFTWARE WITHIN THIRTY (30) DAYS OF
# YOUR INITIAL PURCHASE.
#
# IF YOU WISH TO USE THE SOFTWARE AS AN EMPLOYEE, CONTRACTOR, OR AGENT OF A
# CORPORATION, PARTNERSHIP OR SIMILAR ENTITY, THEN YOU MUST BE AUTHORIZED TO SIGN
# FOR AND BIND THE ENTITY IN ORDER TO ACCEPT THE TERMS OF THIS AGREEMENT. THE
# LICENSES GRANTED UNDER THIS AGREEMENT ARE EXPRESSLY CONDITIONED UPON ACCEPTANCE
# BY SUCH AUTHORIZED PERSONNEL.
#
# IF YOU HAVE ENTERED INTO A SEPARATE WRITTEN LICENSE AGREEMENT WITH AKIBAN FOR
# USE OF THE SOFTWARE, THE TERMS AND CONDITIONS OF SUCH OTHER AGREEMENT SHALL
# PREVAIL OVER ANY CONFLICTING TERMS OR CONDITIONS IN THIS AGREEMENT.
#

#
# OPTIONS:
#   -f: start in foreground
#   -w: start console window
#   -g: start the persistit GUI
#   -p <filename>: log the pid to a file (useful to kill it later)
#   -j <filename>: jar file of server to use
#   -d <dirname>: directory with jar dependencies
#   -c <dirname>: configuration directory to use
#   -k: kill an akiban server process
#   -v: print the version of akiban server
#   -s: profile using Solaris Studio
#
# CONTROLLING STARTUP:
# 
# This script relies on few environment variables to determine startup
# behavior, those variables are:
#
#   JVM_OPTS -- Additional arguments to the JVM for heap size, etc
#   AKIBAN_CONF -- Directory containing configuration files.
#

akiban_home=$(cd $(dirname $0)/..; pwd -P)

# Use JAVA_HOME if set, otherwise look for java in PATH
if [ -x $JAVA_HOME/bin/java ]; then
    JAVA=$JAVA_HOME/bin/java
else
    JAVA=`which java`
fi

infer_jar_file()
{
    local loc_local="${akiban_home}/target/akiban-server-1.4.5-SNAPSHOT.jar"
    local loc_global="/usr/share/akiban/akiban-server.jar"

    # Only infer if passed no argument
    if [ -z "$1" ]; then
        # Try local first so you can develop *and* nave a system package installed
        if [ -f "$loc_local" ]; then
            echo $loc_local
        elif [ -f "$loc_global" ]; then
            echo $loc_global
        else
            echo "<UNKNOWN>"
        fi
    else
        echo "$1"
    fi
}

infer_dep_dir()
{
    local loc_local="${akiban_home}/target/dependency"
    local loc_global="/usr/share/akiban/server"

    # Only infer if passed no argument
    if [ -z "$1" ]; then
        # Try local first so you can develop *and* nave a system package installed
        if [ -d "$loc_local" ]; then
            echo $loc_local
        elif [ -d "$loc_global" ]; then
            echo $loc_global
        else
            echo "<UNKNOWN>"
        fi
    else
        echo "$1"
    fi
}


get_version()
{
    jar_file=$(infer_jar_file $1)
    dep_dir=$(infer_dep_dir $2)
    CLASSPATH=$jar_file:$dep_dir/*

    server_version=$(exec $JAVA -cp "$CLASSPATH" com.akiban.server.GetVersion)
    persistit_version=$(exec $JAVA -cp "$CLASSPATH" com.persistit.GetVersion)
    echo "server   : ${server_version}"
    echo "persistit: ${persistit_version}"
}

launch_service()
{
    foreground=$1
    props=$2
    usegui=$3
    pidpath=$4
    JAR_FILE=$(infer_jar_file $5)
    DEP_DIR=$(infer_dep_dir $6)
    AKIBAN_CONF=$7

    if [ -z "$AKIBAN_CONF" ]; then
        # default AKIBAN_CONF dir
        AKIBAN_CONF="${akiban_home}/conf"
    fi
    akiban_parms="-Dakserver.config_dir=$AKIBAN_CONF"

    if [ -n "$pidpath" ]; then
        akiban_parms="$akiban_parms -Dakserver.pidfile=$pidpath"
    fi

    if [ -f "$AKIBAN_CONF/config/jvm.options" ]; then
        . "$AKIBAN_CONF/config/jvm.options"
    fi

    if [ -n "$usegui" ]; then
        akiban_parms="$akiban_parms -Dcom.persistit.showgui=true"
    fi
    akiban_parms="$akiban_parms -Dservices.config=$AKIBAN_CONF/config/services-config.yaml -Dlog4j.configuration=file:$AKIBAN_CONF/config/log4j.properties $print_compilation $props"

    CLASSPATH=$JAR_FILE:$DEP_DIR/*
    main_class="com.akiban.server.AkServer"
    if [ -n "$mode" ]; then
        if [ "$mode" == "window" ]; then
          akiban_parms="$akiban_parms -Drequire:com.akiban.server.service.ui.SwingConsoleService -Dprioritize:com.akiban.server.service.ui.SwingConsoleService"
          main_class=com.akiban.server.service.ui.AkServerWithSwingConsole
        fi
        if [ $profile ]
        then
            echo $profile "$JVM_OPTS $akiban_parms -cp $CLASSPATH" $JAVA  $main_class
            exec $profile "$JVM_OPTS $akiban_parms -cp $CLASSPATH" $JAVA  $main_class
        else
            echo $JAVA $JVM_OPTS $akiban_parms -cp "$CLASSPATH" $main_class
            exec $JAVA $JVM_OPTS $akiban_parms -cp "$CLASSPATH" $main_class
        fi
    else
        echo ${akiban_home}
        if [ "$profile" ]
        then
            exec $profile "$JVM_OPTS $akiban_parms -cp $CLASSPATH" $JAVA $main_class <&- &
        else
            exec $JAVA $JVM_OPTS $akiban_parms -cp "$CLASSPATH" $main_class <&- &
        fi
    fi

    return $?
}

# Parse any command line options.
args=`getopt fwkvghsj:d:c:p:D: "$@"`
eval set -- "$args"

while true; do
    case "$1" in
        -p)
            pidfile="$2"
            shift 2
        ;;
        -j)
            jarfile="$2"
            shift 2
        ;;
        -d)
            depdir="$2"
            shift 2
        ;;
        -c)
            conf="$2"
            shift 2
        ;;
        -f)
            mode="foreground"
            shift
        ;;
        -w)
            mode="window"
            shift
        ;;
        -g)
            gui="yes"
            shift
        ;;
        -h)
            echo "Usage: $0 [-f] [-g] [-h] [-p pidfile] [-j jarfile] [-k] [-s] [-v]"
            echo "-f launch the akiban server process in the foreground"
            echo "-g launch the persistit admin tool"
            echo "-p specify a pid file"
            echo "-j specify a jar file for the server to use"
            echo "-k kill an akiban server process"
            echo "-s profile using Solaris Studio"
            echo "-v print akiban server version"
            exit 0
        ;;
        -D)
            properties="$properties -D$2"
            shift 2
        ;;
        -k)
            # this is not ideal but is only intended to be
            # called by a developer in their environment when
            # they want to quickly kill an akiban-server
            # process. This can kill other process with akiban-server
            # in their name or arguments too...
            pgrep -u `whoami` -f akiban-server | xargs kill -9
            exit 0
        ;;
        -s)
            profile=`which collect`
            profile="$profile -y SIGCONT -j on -J "
            print_compilation="$akiban_parms -XX:+PrintCompilation"
            shift
        ;;
        -v)
            get_version $jarfile $depdir
            exit 0
        ;;
        --)
            shift
            break
        ;;
        *)
            echo "Error parsing arguments!" >&2
            exit 1
        ;;
    esac
done

# Start up the service
launch_service "$mode" "$properties" "$gui" "$pidfile" "$jarfile" "$depdir" "$conf"

exit $?

# vi:ai sw=4 ts=4 tw=0 et
