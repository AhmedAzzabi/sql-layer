#*
 * A join between x and y, assuming that x and y are both sorted on the join columns.
 *#
#macro(quote_table_name $t)`$t.schemaName`.`$t.tableName`
#end
#macro(comma_separator)#if($velocityCount != 0), #else  #end#end
delimiter ~~

use `$outputTableName.schemaName` ~~

drop table if exists #quote_table_name($outputTableName) ~~

create table #quote_table_name($outputTableName)(
#foreach ($column in $xTableColumns)
    #comma_separator()$column.name $column.typeDescription
#end
#foreach ($column in $yOnlyColumns)
    , $column.name $column.typeDescription
#end
) ~~

drop procedure if exists `$procedureName` ~~

create procedure `$procedureName`()
begin
#foreach ($column in $xTableColumns)
    declare x_$column.name $column.typeDescription;
#end
#foreach ($column in $yTableColumns)
    declare y_$column.name $column.typeDescription;
#end
    declare more bool default true;
    declare x_more bool default true;
    declare y_more bool default true;
    declare c int;

    declare x cursor for
    select
#foreach ($column in $xTableColumns)
    #comma_separator()$column.name
#end
    from #quote_table_name($xTableName)
#if ($orderBy)
    order by
#foreach ($column in $xJoinColumns)
    #comma_separator()$column.name
#end#end
    ;

    declare y cursor for
    select
#foreach ($column in $yTableColumns)
    #comma_separator()$column.name
#end
    from #quote_table_name($yTableName)
#if ($orderBy)
    order by
#foreach ($column in $yJoinColumns)
    #comma_separator()$column.name
#end#end
    ;

    declare continue handler for not found set more = false;

    open x;
    open y;

    fetch x into
#foreach ($column in $xTableColumns)
    #comma_separator()x_$column.name
#end
    ;
    set x_more = more;
    fetch y into
#foreach ($column in $yTableColumns)
    #comma_separator()y_$column.name
#end
    ;
    set y_more = more;

    while x_more and y_more do
        select if((#foreach ($column in $xJoinColumns)#comma_separator()x_$column.name#end) =
                  (#foreach ($column in $yJoinColumns)#comma_separator()y_$column.name#end),
                  0, if((#foreach ($column in $xJoinColumns)#comma_separator()x_$column.name#end) <
                        (#foreach ($column in $yJoinColumns)#comma_separator()y_$column.name#end),
                        -1, 1))
        into c;
        if c = 0 then
            insert into #quote_table_name($outputTableName)
            values (
#foreach ($column in $xTableColumns)
                #comma_separator()x_$column.name
#end
#foreach ($column in $yOnlyColumns)
                , y_$column.name
#end
            );
#if (!$multipleYPerX)
            fetch x into
#foreach ($column in $xTableColumns)
                #comma_separator()x_$column.name
#end
            ;
#end
            set x_more = more;
            fetch y into
#foreach ($column in $yTableColumns)
                #comma_separator()y_$column.name
#end
            ;
            set y_more = more;
        elseif c > 0 then
            fetch y into
#foreach ($column in $yTableColumns)
                #comma_separator()y_$column.name
#end
            ;
            set y_more = more;
        else
            fetch x into
#foreach ($column in $xTableColumns)
                #comma_separator()x_$column.name
#end
            ;
            set x_more = more;
        end if;
    end while;

    close x;
    close y;
    
end ~~

call `$procedureName`() ~~
