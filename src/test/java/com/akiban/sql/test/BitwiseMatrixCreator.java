/**
 * Copyright (C) 2011 Akiban Technologies Inc.
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License, version 3,
 * as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see http://www.gnu.org/licenses.
 */

package com.akiban.sql.test;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Calendar;
import java.util.Date;
import java.util.Random;

public class BitwiseMatrixCreator implements Runnable {

    StringBuffer data = new StringBuffer();
    StringBuffer sql_data = new StringBuffer();
    Random r;
    private int counter = 1;
    
    /**
     * @param args
     */
    public static void main(String[] args) {
        BitwiseMatrixCreator b = new BitwiseMatrixCreator();
        b.run();
    }

    @Override
    public void run() {
        r = new Random();
        data.append("# generated by com.akiban.sql.test.BitwiseMatrixCreator on "
                + new Date() + System.getProperty("line.separator"));
        data.append("# Create a table with all supported data types"
                + System.getProperty("line.separator") + "---" +
                "- CreateTable: bitwise_matrix (" +
                "        id integer," +
                "        source1 int," +
                "        source2 int," +
                "        bitwise_and int," +
                "        bitwise_or int," +
                "        bitwise_xor int," +
                "        bitwise_rightshift int," +
                "        bitwise_leftshift int," +
                "        bitwise_invert int" +
                "        )" 
                + System.getProperty("line.separator"));
        sql_data.append("use test;" + System.getProperty("line.separator"));
        sql_data.append("truncate table test.bitwise_matrix;"
                + System.getProperty("line.separator"));
        
        for (int x=0;x < 10;x++) {
            recordSQL();
        }
        
        data.append("..." + System.getProperty("line.separator"));
        try {
            //TODO find better spot for output
            save("all-bitwise-matrix-schema.yaml", data);
            save("all-bitwise-matrix-schema.sql", sql_data);
        } catch (IOException e) {
            System.err.println("Error: " + e.getMessage());
        }
    }

    private String genSQL(boolean sql) {
        String database = "bitwise_matrix";
        if (sql) {
            database = "test." + database;
        }
        int source1 = r.nextInt(200);
        int source2 = r.nextInt(200);
        
        return "insert into "
                + database
                + " (" +
                "id," +
                "source1," +
                "source2," +
                "bitwise_and," +
                "bitwise_or," +
                "bitwise_xor," +
                "bitwise_rightshift," +
                "bitwise_leftshift," +
                "bitwise_invert" +
                ") values (" + (counter ++) + ","+source1+","+source2+","+(source1 & source2)+","+(source1 | source2)+","+(source1 ^ source2)+","+(source1 >> source2)+","+(source1 << source2)+","+(source1 & ~source2)+" )";
    }
    
    private void recordSQL() {
        data.append("---\n" + "- Statement: " + genSQL(false)
                + System.getProperty("line.separator"));
        sql_data.append(genSQL(true) + ";"
                + System.getProperty("line.separator"));
    }

    private void save(String filename, StringBuffer data) throws IOException {
        try {
            // Create file
            FileWriter fstream = new FileWriter(filename);
            BufferedWriter out = new BufferedWriter(fstream);
            out.write(data.toString());
            // Close the output stream
            out.close();
        } catch (Exception e) {// Catch exception if any
            System.err.println("Error: " + e.getMessage());
        }
        File f = new File(filename);
        System.out.println(f.getCanonicalPath());
        System.out.println(data.toString());

    }
    
}
