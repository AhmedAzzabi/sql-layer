# Test the AVG aggregate function
# Related bug(s): 
#           905492: AVG of intergral values produces wrong result (due to integer division)
#               => fix commited
#           Bug 973449: (in test framewrok): precision and scales are not preserved.
# Status: confirmed
---
- Include: all-types-schema.yaml
---
- CreateTable: t (real_field real)
---
- Statement: INSERT INTO t VALUES ('Infinity')
---
- Statement: SELECT AVG(real_field) FROM t
- output: [[Infinity]]
# Test with no rows => null
#---
#- Statement: SELECT AVG(bigint_field), AVG(bigint_unsigned_field),
#    AVG(boolean_field), AVG(decimal_field), AVG(double_field),
#    AVG(float_field), AVG(integer_field), AVG(numeric_field),
#    AVG(real_field), AVG(smallint_field) FROM all_types
#- output: [[null, null, null, null, null, null, null, null, null, null]]
#
## Test with null row => null
#---
#- Statement: INSERT INTO all_types (bigint_field, bigint_unsigned_field,
#    boolean_field, decimal_field, double_field, float_field,
#    integer_field, numeric_field, real_field, smallint_field)
#    VALUES (null, null, null, null, null, null, null, null, null, null)
#---
#- Statement: SELECT AVG(bigint_field), AVG(bigint_unsigned_field),
#    AVG(boolean_field), AVG(decimal_field), AVG(double_field),
#    AVG(float_field), AVG(integer_field), AVG(numeric_field),
#    AVG(real_field), AVG(smallint_field) FROM all_types
#- output: [[null, null, null, null, null, null, null, null, null, null]]
#
## Insert single row
#---
#- Statement: INSERT INTO all_types
#    (bigint_field, bigint_unsigned_field, boolean_field, decimal_field,
#     double_field, float_field, integer_field, numeric_field,
#     real_field, smallint_field)
#    VALUES (1, 1, 1, 1.0, 1.0, 1.0, 1, 1.0, 1.0, 1)
#--- bug this always trigger error: {expected [expected] but got [expected]!
#- Statement: SELECT AVG(bigint_field), AVG(bigint_unsigned_field),
#    AVG(boolean_field), AVG(decimal_field), AVG(double_field),
#    AVG(float_field), AVG(integer_field), AVG(numeric_field),
#    AVG(real_field), AVG(smallint_field) FROM all_types
#- output: [[1, 1, 1, 1.000000000, 1.0, 1.0, 1, 1.000000000, 1.0, 1]]

# Insert duplicate row
#---
#- Statement: INSERT INTO all_types
#    (bigint_field, bigint_unsigned_field, boolean_field, decimal_field,
#     double_field, float_field, integer_field, numeric_field,
#     real_field, smallint_field)
#    VALUES (1, 1, 1, 1.0, 1.0, 1.0, 1, 1.0, 1.0, 1)
#---
#- Statement: SELECT AVG(bigint_field), AVG(bigint_unsigned_field),
#    AVG(boolean_field), AVG(decimal_field), AVG(double_field),
#    AVG(float_field), AVG(integer_field), AVG(numeric_field),
#    AVG(real_field), AVG(smallint_field) FROM all_types
#- output: [[1, 1, 1, 1, 1.0, 1.0, 1, 1, 1.0, 1]]
#
## Rounding (1+1+2+2)/4 = 6/4 = 1.5
#---
#- Statement: INSERT INTO all_types
#    (bigint_field, bigint_unsigned_field, decimal_field, double_field,
#     float_field, integer_field, numeric_field, real_field, smallint_field)
#    VALUES
#    (2, 2, 2.0, 2.0, 2.0, 2, 2.0, 2.0, 2),
#    (2, 2, 2.0, 2.0, 2.0, 2, 2.0, 2.0, 2)
#---
#- Statement: SELECT AVG(bigint_field), AVG(bigint_unsigned_field),
#    AVG(decimal_field), AVG(double_field), AVG(float_field),
#    AVG(integer_field), AVG(numeric_field), AVG(real_field),
#    AVG(smallint_field)
#    FROM all_types
#- output: [[1, 1, 1.5, 1.5, 1.5, 1, 1.5, 1.5, 1]]
#
## Back to zero
#---
#- Statement: INSERT INTO all_types
#    (bigint_field, decimal_field, double_field, float_field,
#     integer_field, numeric_field, real_field, smallint_field)
#    VALUES
#    (-6, -6.0, -6.0, -6.0, -6, -6.0, -6.0, -6)
#---
#- Statement: SELECT AVG(bigint_field), AVG(decimal_field),
#    AVG(double_field), AVG(float_field), AVG(integer_field),
#    AVG(numeric_field), AVG(real_field), AVG(smallint_field) FROM all_types
#- output: [[0, 0, 0.0, 0.0, 0, 0, 0.0, 0]]

# Do boolean specially
# Returns incorrect results -- see bug-avg-boolean.yaml
# ---
# - Statement: INSERT INTO all_types (boolean_field) VALUES (0)
# ---
# - Statement: SELECT AVG(boolean_field) FROM all_types
# - output: [[1]]
# ---
# - Statement: INSERT INTO all_types (boolean_field) VALUES (0), (0)
# ---
# - Statement: SELECT AVG(boolean_field) FROM all_types
# - output: [[0]]

---
- Statement: DELETE FROM all_types

# Underflow
---
- Statement: INSERT INTO all_types (double_field, float_field)
    VALUES (4.9E-324, 4.9E-324), (0.0E1, 0.0E1)
---
- Statement: SELECT AVG(double_field), AVG(float_field) FROM all_types
- output: [[0.0, 0.0]]

---
- Statement: DELETE FROM all_types

# Infinity and NaN
---
- Statement: INSERT INTO all_types (double_field, float_field)
    VALUES (-1000.0, -1000.0)
---
- Statement: INSERT INTO all_types (double_field, float_field)
    VALUES ('Infinity', 'Infinity')
---
- Statement: SELECT AVG(double_field), AVG(float_field) FROM all_types
- output: [[Infinity, Infinity]]
---
- Statement: DELETE FROM all_types
---
- Statement: INSERT INTO all_types (double_field, float_field)
    VALUES (1000.0, 1000.0)
---
- Statement: INSERT INTO all_types (double_field, float_field)
    VALUES ('-Infinity', '-Infinity')
---
- Statement: SELECT AVG(double_field), AVG(float_field) FROM all_types
- output: [[-Infinity, -Infinity]]
---
- Statement: INSERT INTO all_types (double_field, float_field)
    VALUES ('Infinity', 'Infinity')
---
- Statement: SELECT AVG(double_field), AVG(float_field) FROM all_types
- output: [[NaN, NaN]]
---
- Statement: DELETE FROM all_types

---
- Statement: INSERT INTO all_types (double_field, float_field)
    VALUES (1.0, 1.0)
---
- Statement: INSERT INTO all_types (double_field, float_field)
    VALUES ('NaN', 'NaN')
---
- Statement: SELECT AVG(double_field), AVG(float_field) FROM all_types
- output: [[NaN, NaN]]

...
