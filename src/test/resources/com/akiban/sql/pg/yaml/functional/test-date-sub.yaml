# Test the DATE_ADD() function
---
- Include: all-types-schema.yaml
---
- Statement: INSERT INTO all_types (bigint_field, date_field, time_field) VALUES (1, '2000-01-01', '01:05:06')
---
- Statement: select '2008-12-31 23:59:59' - INTERVAL 1 SECOND from all_types;
- output: [[!re '2008-12-31 23:59:58([.]0)?']] 
---
- Statement: SELECT INTERVAL 1 DAY + '2008-12-31' from all_types;
- output: [['2009-01-01']] 
---
- Statement: SELECT '2005-01-01' - INTERVAL 1 SECOND from all_types;
- output: [['2004-12-31']] 
---
- Statement: SELECT DATE_SUB('2000-01-01 00:00:00', INTERVAL 1 SECOND) from all_types;
- output: [[!re '1999-12-31 23:59:59([.]0)?']] 
---
- Statement: SELECT DATE_SUB('2010-01-01 23:59:59', INTERVAL 1 DAY) from all_types;
- output: [[!re '2009-12-31 23:59:59([.]0)?']] 
---
- Statement: SELECT DATE_SUB('2100-12-31 23:59:59', INTERVAL '1:1' MINUTE_SECOND) from all_types;
- output: [[!re '2100-12-31 23:58:58([.]0)?']] 
---
- Statement: SELECT DATE_SUB('2005-01-01 00:00:00', INTERVAL '1 1:1:1' DAY_SECOND) from all_types;
- output: [[!re '2004-12-30 22:58:59([.]0)?']] 
---
# <datetime> minus (negative) interval == <datetime> PLUS (positive) interval
- Statement: SELECT DATE_SUB('1900-01-01 00:00:00', INTERVAL '-1 10' DAY_HOUR) from all_types;
- output: [[!re '1900-01-02 10:00:00([.]0)?']] 
---
- Statement: SELECT DATE_SUB('1900-01-01 00:00:00', INTERVAL '1 10' DAY_HOUR) from all_types;
- output: [[!re '1899-12-30 14:00:00([.]0)?']]
---
# Right now, INTERVAL DAY gets translated to INTERVAL_MILLIS thus the result would be a DATETIME
# Could be fixed, but it isn't going to be pretty.
- Statement: SELECT DATE_SUB('1998-01-02', INTERVAL 31 DAY) from all_types;
- output: [[!re '1997-12-02 00:00:00([.]0)?']] 
#bug 889300: (Timestamp with fractional seconds) 
#- Statement: SELECT DATE_SUB('1992-12-31 23:59:59.000002', INTERVAL '1.999999' SECOND_MICROSECOND) from all_types;
#- output: [['1993-01-01 00:00:01.000001']] 
...