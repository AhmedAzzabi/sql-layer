# Test the AVG aggregate function

---
- Include: all-types-schema.yaml

# Test with no rows => null
---
- Statement: SELECT AVG(bigint_field), AVG(decimal_field), AVG(double_field),
    AVG(float_field), AVG(integer_field), AVG(numeric_field),
    AVG(smallint_field) FROM all_types
- output: [[null, null, null, null, null, null, null]]

# Test with null row
---
- Statement: INSERT INTO all_types (bigint_field, decimal_field, double_field,
    float_field, integer_field, numeric_field, smallint_field)
    VALUES (null, null, null, null, null, null, null)
---
- Statement: SELECT AVG(bigint_field), AVG(decimal_field), AVG(double_field),
    AVG(float_field), AVG(integer_field), AVG(numeric_field),
    AVG(smallint_field) FROM all_types
- output: [[null, null, null, null, null, null, null]]

# Insert single row
---
- Statement: INSERT INTO all_types
    (bigint_field, decimal_field, double_field, float_field, integer_field,
     numeric_field, smallint_field)
    VALUES (1, 1.0, 1.0, 1.0, 1, 1.0, 1)
---
- Statement: SELECT AVG(bigint_field), AVG(decimal_field), AVG(double_field),
    AVG(float_field), AVG(integer_field), AVG(numeric_field),
    AVG(smallint_field) FROM all_types
- output: [[1, 1.0, 1.0, 1.0, 1, 1.0, 1]]

# Insert duplicate row
---
- Statement: INSERT INTO all_types
    (bigint_field, decimal_field, double_field, float_field, integer_field,
     numeric_field, smallint_field)
    VALUES (1, 1.0, 1.0, 1.0, 1, 1.0, 1)
---
- Statement: SELECT AVG(bigint_field), AVG(decimal_field), AVG(double_field),
    AVG(float_field), AVG(integer_field), AVG(numeric_field),
    AVG(smallint_field) FROM all_types
- output: [[1, 1.0, 1.0, 1.0, 1, 1.0, 1]]

# Rounding
---
- Statement: INSERT INTO all_types
    (bigint_field, decimal_field, double_field, float_field, integer_field,
     numeric_field, smallint_field)
    VALUES
    (2, 2.0, 2.0, 2.0, 2, 2.0, 2),
    (2, 2.0, 2.0, 2.0, 2, 2.0, 2)
---
- Statement: SELECT AVG(bigint_field), AVG(decimal_field), AVG(double_field),
    AVG(float_field), AVG(integer_field), AVG(numeric_field),
    AVG(smallint_field) FROM all_types
- output: [[1, 1.5, 1.5, 1.5, 1, 1.5, 1]]

# Back to zero
---
- Statement: INSERT INTO all_types
    (bigint_field, decimal_field, double_field, float_field, integer_field,
     numeric_field, smallint_field)
    VALUES
    (-6, -6.0, -6.0, -6.0, -6, -6.0, -6)
---
- Statement: SELECT AVG(bigint_field), AVG(decimal_field), AVG(double_field),
    AVG(float_field), AVG(integer_field), AVG(numeric_field),
    AVG(smallint_field) FROM all_types
- output: [[0, 0.0, 0.0, 0.0, 0, 0.0, 0]]

# Infinity and NaN
---
- Statement: INSERT INTO all_types (double_field, float_field)
    VALUES ('Infinity', 'Infinity')
---
- Statement: SELECT AVG(double_field), AVG(float_field) FROM all_types
- output: [[Infinity, Infinity]]
---
- Statement: INSERT INTO all_types (double_field, float_field)
    VALUES ('-Infinity', '-Infinity')
# ---
# - Statement: SELECT AVG(double_field), AVG(float_field) FROM all_types
# - output: [[0, 0]]

---
- Statement: INSERT INTO all_types (double_field, float_field)
    VALUES ('NaN', 'NaN')
---

- Statement: SELECT AVG(double_field), AVG(float_field) FROM all_types
- output: [[NaN, NaN]]

...
