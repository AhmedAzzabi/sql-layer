# Test the YEAR function
---   # Zero date tests moved to test-zero-date
- Include: all-types-schema.yaml
---
- CreateTable: t (year_field year)
---
- Statement: INSERT INTO t VALUES (91);
---
- Statement: INSERT INTO all_types (varchar_field) VALUES (null)
---
- Statement: INSERT INTO all_types (varchar_field) VALUES
    ('0001-11-11'), ('0020-02-22'), ('0300-03-30'),
    ('1961-01-11'), ('2001-09-11'), ('3210-04-04'), ('9999-01-01'),
    ('1234567-00-00'), ('abc')
--- # MySQL returns null for '1234567-00-00' 
- Statement: SELECT YEAR(varchar_field) FROM all_types
- output: [[null],[1], [20], [300],
           [1961], [2001], [3210], [9999],
           !select-engine { all: [1234567], newtypes: [null] } , [null]]
--- # MySQL does not return '1234567-00-00'
- Statement: SELECT varchar_field FROM all_types
    WHERE YEAR(varchar_field) > YEAR('0100-01-01') order by CAST(varchar_field as date) asc
- output: !select-engine { 
    all: [['0300-03-30'], ['1961-01-11'], ['2001-09-11'], ['3210-04-04'], ['9999-01-01'],['1234567-00-00']],
    newtypes: [['0300-03-30'], ['1961-01-11'], ['2001-09-11'], ['3210-04-04'], ['9999-01-01']]
    }
--- 
- Statement: SELECT YEAR(varchar_field) > '100' FROM all_types where varchar_field <> 'abc' order by CAST(varchar_field as date) asc 
- output: !select-engine {
    all: [[false],[false],[true],[true],[true],[true],[true],[true]],
    newtypes: [[false],[false],[true],[true],[true],[true],[true],[null]]
    }
---
- Statement: SELECT varchar_field FROM all_types
    WHERE YEAR(varchar_field) <= ?
- params: [[1961]]
- output:  [['0001-11-11'], ['0020-02-22'], ['0300-03-30'],
           ['1961-01-11']]
...
