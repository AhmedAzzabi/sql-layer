#
# Copyright (C) 2009-2013 Akiban Technologies, Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

#######################################################################
## On-disk configuration options
#######################################################################

# Path to location where data files will be stored. This directory
# need not exist before starting the server however the user starting the
# server will need correct permissions in order to create the directory.
fdbsql.datapath=/var/lib/foundationdb-sql

# to control how pages are split. Please see Persistit's documentation
# on SplitPolicy for what these do.
persistit.splitpolicy=NICE

# controls the directory in which temporary Persistit volumes
# during certain operations such as sorting.
persistit.tmpvolddir=/tmp

# Limits the size to which temporary persistit volumes can grow. If a 
# temporary volume reaches this limit then the current query executing
# will stop executing.
persistit.tmpvolmaxsize=2G

# Defines the durability of a transaction when commit is called:
# SOFT  - returns before the updates have been recorded on non-volatile storage. 
#         Persistit attempts to write them within 100 milliseconds,
#         but this interval is not guaranteed.
# HARD  - does not return until all updates created by the transaction
#         have been written to non-volatile storage.
# GROUP - does not return until all updates created by the transaction
#         have been written to non-volatile storage. In addition, the
#         committing transaction waits briefly in an attempt to
#         recruit other concurrently running transactions to write
#         their updates with the same physical I/O operation.
persistit.txnpolicy=HARD

#######################################################################
# Postgres Server connection options
#######################################################################
# port on which to start the Postgres Server.
# (A real Postgres server listens on 5432.)
fdbsql.postgres.port=15432

# Size of the Postgres parser/optimizer statement cache. If the same
# statement arrives in the Postgres parser it can re-use the 
# compiled statement for faster execution.  
fdbsql.postgres.statementCacheCapacity = 500

#######################################################################
## Query logging options
#######################################################################

# whether to enable the query log or not
fdbsql.querylog.enabled=false

# file in which queries will be logged
fdbsql.querylog.filename=/var/log/foundationdb-sql/queries.log

# threshold in milli-seconds for query execution time
# default is 0 which specifies that all queries are
# logged
fdbsql.querylog.exec_time_threshold=0

#######################################################################
## MySQL compatibility optimizer options
#######################################################################

optimizer.implicitAggregate=first
optimizer.distinctSortNotSelectGroupBy=true

#######################################################################
## Optional feature options
#######################################################################

fdbsql.postgres.parserGeospatialIndexes=true
