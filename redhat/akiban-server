#!/bin/bash
#
# /etc/init.d/akiban-server
#
# Startup script for Akiban Server
# 
# chkconfig: 2345 20 80
# description: Starts and stops Akiban Server

. /etc/rc.d/init.d/functions

export JAR_FILE=/usr/share/akiban/akiban-server.jar
export AKIBAN_CONF=/etc/akiban
export AKIBAN_OWNR="akiban"
NAME="akiban"
log_file=/var/log/akiban/server_stdout.log
pid_file=/var/run/akiban/server.pid
timeout=60
AKIBAN_PROG=/usr/sbin/akserver

# Use LSB init script functions for printing messages, if possible
lsb_functions="/lib/lsb/init-functions"
if test -f $lsb_functions ; then
  . $lsb_functions
else
  log_success_msg()
  {
    echo " SUCCESS! $@"
  }
  log_failure_msg()
  {
    echo " ERROR! $@"
  }
fi

# Read configuration variable file if it is present
[ -r /etc/default/$NAME ] && . /etc/default/$NAME

check_no_process()
{
    if [ ! -e "$pid_file" ]; then
        check_pid=`pgrep -f "jar $JAR_FILE"`
        if [ "$check_pid" != "" ]; then
            return 1
        fi
    fi
    return 0
}

case "$1" in
    start)
        if [ -f $pid_file ]; then
            status -p $pid_file akiban
            exit 1
        fi
        check_no_process
        if [ $? -ne 0 ]; then
            log_failure_msg "$NAME is already running but no pidfile exists"
            exit 1
        fi
        su $AKIBAN_OWNR -c "$AKIBAN_PROG -p $pid_file -j $JAR_FILE -c $AKIBAN_CONF" > $log_file 2>&1
        if [ $? -ne 0 ]; then
            log_failure_msg "Starting Akiban"
        fi
        # we give server 60 seconds to start all services
        echo -n "Starting Akiban "
        attempts=1
        while [ ! -f $pid_file ]
        do
            attempts=$(($attempts+1))
            echo -n "."
            if [ $attempts = $timeout ]; then
                break
            fi
            sleep 1
        done
        if [ -f $pid_file ]; then
            log_success_msg
        else
            log_failure_msg
        fi
        ;;
    stop)
        status -p $pid_file akiban > /dev/null 2>&1
        retval=$?
        if [ ${retval} -ne 0 ]; then
            # return codes from status as documented in LSB spec
            # http://refspecs.linuxbase.org/LSB_4.0.0/LSB-Core-generic/LSB-Core-generic/iniscrptact.html
            case ${retval} in
            1) 
              log_failure_msg "Akiban is not running, but PID file exists"
              ;;
            3) 
              log_failure_msg "Akiban process is not running"
              ;;
            *)
              log_failure_msg "Shutdown Akiban"
              ;;
            esac
            exit 1
        fi
        echo -n "Shutdown Akiban "
        su $AKIBAN_OWNR -c "kill `cat $pid_file`"
        # we give server 60 seconds to shut down
        attempts=1
        while [ -f $pid_file ]
        do
            attempts=$(($attempts+1))
            echo -n "."
            if [ $attempts = $timeout ]; then
                break
            fi
            sleep 1
        done
        if [ -f $pid_file ]; then
            log_failure_msg
        else
            log_success_msg
        fi
        ;;
    reload|restart)
        $0 stop
        sleep 5
        $0 start
        ;;
    status)
        check_no_process
        if [ $? -ne 0 ]; then
            echo "$NAME is running (pid $check_pid) but no pidfile exists"
            exit 1
        fi
        status -p $pid_file akiban
        ;;
    *)
        echo "Usage: `basename $0` start|stop|status|restart|reload"
        exit 1
esac

exit 0

